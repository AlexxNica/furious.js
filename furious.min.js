!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.furious=e()}}(function(){return function e(f,o,n){function d(t,u){if(!o[t]){if(!f[t]){var l="function"==typeof require&&require;if(!u&&l)return l(t,!0);if(i)return i(t,!0);throw new Error("Cannot find module '"+t+"'")}var p=o[t]={exports:{}};f[t][0].call(p.exports,function(e){var o=f[t][1][e];return d(o?o:e)},p,p.exports,e,f,o,n)}return o[t].exports}for(var i="function"==typeof require&&require,t=0;t<n.length;t++)d(n[t]);return d}({1:[function(e,f){"use strict";function o(e){if(!(["f32","f64"].indexOf(e)>=0))throw new RangeError("Type "+e+" is not supported");this.type=e,this.size={f32:4,f64:8}[e],this.epsilon={f32:1.1920928955078125e-7,f64:2.220446049250313e-16}[e],this.arrayType={f32:Float32Array,f64:Float64Array}[e]}o.prototype.equals=function(e){return e instanceof o&&this.arrayType===e.arrayType},f.exports=o},{}],2:[function(e,f){"use strict";function o(e,f){f(this)}var n=e("./NDArray"),d=e("./DataType"),i=e("./util"),t=e("./jsmath");o.prototype.empty=function(e,f){return this.zeros(e,f)},o.prototype.zeros=function(e,f){e=i.checkShape(e),f="undefined"==typeof f?new d("f64"):i.checkDataType(f);var o=new n(e,f,this);return o._data=new f.arrayType(o.length),o},o.prototype.ones=function(e,f){var o=this.zeros(e,f);return t.fill(o._data,1),o},o.prototype.array=function(e,f){f="undefined"==typeof f?new d("f64"):i.checkDataType(f);var o=[];i.discoverArrayShapeRecursive(e,o,0);var n=this.empty(o,f);return i.copyArrayDataRecursive(n._data,e,o,0,0),n},o.prototype._invalidate=function(e){i.checkNDArray(e,"array"),e._data=null},o.prototype.get=function(){if(0===arguments.length)throw new Error("Callback argument missing");var e=arguments[arguments.length-1];if(1===arguments.length)throw new Error("At least one NDArray argument expected");for(var f=0;f<arguments.length-1;++f)i.checkNDArray(arguments[f],"argument "+f);for(var f=0;f<arguments.length-1;++f)arguments[f]._decRef();for(var o=new Array(arguments.length-1),f=0;f<o.length;++f){var n=arguments[f];if(0===n.shape.length)o[f]=n._data[0];else{var d=new Array(n.shape[0]);i.createArrayRecursive(n._data,d,n.shape,0,0),o[f]=d}}for(var f=0;f<arguments.length-1;++f)arguments[f]._tryInvalidate();e.apply(null,o)},o.prototype.reshape=function(e,f){if(f=i.checkShape(f),i.computeLength(f)!==e.length)throw new RangeError("The shape is not compatible with the array");var o=new n(f,e.dataType,this);return e._decRef()?(o._data=new o.dataType.arrayType(o.length),o._data.set(e._data)):(o._data=e._data,e._tryInvalidate()),o},o.prototype.repeat=function(e,f,o,n){i.checkNDArray(e,"a"),f=i.checkRepeats(f),o=i.checkAxis(o,e.shape.length);var d=e.shape,u=d.slice(0);u[o]*=f,e._decRef();try{"undefined"==typeof n?n=this.empty(u,e.dataType):(i.checkNDArray(n,"out"),i.checkShapesCompatibility(n.shape,u),i.checkDataTypesCompatibility(e.dataType,n.dataType),n._incRef());var l=i.computeOuterStride(d,o),p=i.computeInnerStride(d,o);t.repeat(e._data,n._data,l,p,d[o],f)}catch(s){throw e._incRef(),s}return e._tryInvalidate(),n};var u=function(e,f,o,d,t,u,l){var p=null,s=null;if(e instanceof n){if(p=e.shape,s=e.dataType,f instanceof n)i.checkShapesCompatibility(e.shape,f.shape),i.checkDataTypesCompatibility(e.dataType,f.dataType);else if(!i.isNumber(f))throw new TypeError("Unsupported type of b")}else{if(!i.isNumber(e))throw new TypeError("Unsupported type of a");p=f.shape,s=f.dataType,i.checkNDArray(f,"b")}e instanceof n&&e._decRef(),f instanceof n&&f._decRef();try{"undefined"==typeof o?(o=new n(p,s,d),o._data=e instanceof n&&!e._hasRefs()?e._data:f instanceof n&&!f._hasRefs()?f._data:new s.arrayType(o.length)):(i.checkNDArray(o,"out"),i.checkShapesCompatibility(p,o.shape),i.checkDataTypesCompatibility(s,o.dataType),o._incRef()),e instanceof n?f instanceof n?t(e._data,f._data,o._data):u(e._data,+f,o._data):l(f._data,+e,o._data)}catch(y){throw e instanceof n&&e._incRef(),f instanceof n&&f._incRef(),y}return e instanceof n&&e._tryInvalidate(),f instanceof n&&f._tryInvalidate(),o},l=function(e,f,o,d){i.checkNDArray(e,"a"),e._decRef();try{"undefined"==typeof f?(f=new n(e.shape,e.dataType,o),f._data=e instanceof n&&!e._hasRefs()?e._data:new e.dataType.arrayType(f.length)):(i.checkNDArray(f,"out"),i.checkShapesCompatibility(e.shape,f.shape),i.checkDataTypesCompatibility(e.dataType,f.dataType),f._incRef()),d(e._data,f._data)}catch(t){throw e._incRef(),t}return e._tryInvalidate(),f},p=function(e,f,o,n,d,t){if(i.checkNDArray(e,"a"),"undefined"==typeof f)return"undefined"==typeof o?o=n.empty([],e.dataType):(i.checkNDArray(o,"out"),i.checkShapesCompatibility([],o.shape),i.checkDataTypesCompatibility(e.dataType,o.dataType),o._incRef()),d(e._data,o._data),e._tryRelease(),o;f=i.checkAxis(f,e.shape.length);var u=i.computeAxisReductionOutShape(e.shape,f);if("undefined"==typeof o)var o=n.empty(u,e.dataType);else i.checkNDArray(o,"out"),i.checkShapesCompatibility([],o.shape),i.checkDataTypesCompatibility(e.dataType,o.dataType),o._incRef();return t(e._data,o._data,i.computeOuterStride(e.shape,f),i.computeInnerStride(e.shape,f),e.shape[f]),e._tryRelease(),o};o.prototype.add=function(e,f,o){return u(e,f,o,this,t.add,t.addConst,t.addConst)},o.prototype.sub=function(e,f,o){return u(e,f,o,this,t.sub,t.subConst,t.subRevConst)},o.prototype.mul=function(e,f,o){return u(e,f,o,this,t.mul,t.mulConst,t.mulConst)},o.prototype.div=function(e,f,o){return u(e,f,o,this,t.div,t.divConst,t.divRevConst)},o.prototype.min=function(e,f,o){return p(e,f,o,this,t.min,t.axisMin)},o.prototype.max=function(e,f,o){return p(e,f,o,this,t.max,t.axisMax)},o.prototype.sum=function(e,f,o){return p(e,f,o,this,t.sum,t.axisSum)},o.prototype.neg=function(e,f){return l(e,f,this,t.neg)},o.prototype.abs=function(e,f){return l(e,f,this,t.abs)},o.prototype.exp=function(e,f){return l(e,f,this,t.exp)},o.prototype.log=function(e,f){return l(e,f,this,t.log)},o.prototype.sqrt=function(e,f){return l(e,f,this,t.sqrt)},o.prototype.square=function(e,f){return l(e,f,this,t.square)},o.prototype.dot=function(e,f,o){i.checkNDArray(e,"a"),i.checkNDArray(f,"b"),i.checkDataTypesCompatibility(e.dataType,f.dataType);var d=Math.max(e.shape.length-1,0),u=Math.max(f.shape.length-2,0),l=e.shape[d];if(l!==f.shape[u])throw new RangeError("Arrays have incompatible reduction dimensions");for(var p=[],s=1,y=1,c=1,r=0;d>r;r++)p.push(e.shape[r]),s*=e.shape[r];for(var r=0;r<f.shape.length;r++){var a=f.shape[r];u>r?(y*=a,p.push(a)):r>u&&(c*=a,p.push(a))}return"undefined"==typeof o?o=this.empty(p,e.dataType):o instanceof n&&(i.checkNDArray(o,"out"),i.checkShapesCompatibility(o.shape,p),i.checkDataTypesCompatibility(o.dataType,e.dataType),i.checkDifferentNDArrays(e,o,"a","out"),i.checkDifferentNDArrays(f,o,"b","out"),o._incRef()),t.dot(e._data,f._data,o._data,s,y,c,l),e._tryRelease(),f._tryRelease(),o},o.prototype.linspace=function(e,f,o,n){if(!i.isReal(e))throw new TypeError(e+" is not a real number");if(!i.isReal(f))throw new TypeError(f+" is not a real number");if("undefined"==typeof o)o=50;else{if(!i.isInt(o))throw new TypeError(o+" is not an integer");if(0>=o)throw new RangeError("The number of samples must be positive")}if("undefined"==typeof n&&(n=!0),n&&1===o)throw new RangeError("The number of samples must be a least 2 (for start and end points)");for(var t=this.empty(o,new d("f64")),u=t._data,l=f-e,p=n?o-1:o,s=l/p,y=0;o>y;y++)u[y]=e+s*y;return t},f.exports=o},{"./DataType":1,"./NDArray":3,"./jsmath":7,"./util":8}],3:[function(e,f){"use strict";function o(e){for(var f=1,o=0;o<e.length;o++)f*=e[o];return f}function n(e,f,n){if("undefined"==typeof n)throw new Error("Context not defined");if(!d.isPositiveIntArray(e)&&!d.isPositiveInt(e))throw new TypeError(e+" is not a valid array shape");if("undefined"==typeof f)f=new i("f64");else if(!(f instanceof i))throw new TypeError(f+" is not an instance of DataType");this.shape=d.asIntArray(e),this.dataType=f,this._context=n,this.length=o(this.shape),this._lockCount=0,this._refCount=1,this._isValid=!0}var d=e("./util"),i=e("./DataType");n.prototype.lock=function(){if(!this.isValid())throw new Error("Attempted to lock an invalidated array");return this._lockCount++,this},n.prototype.unlock=function(){if(!this.isLocked())throw new Error("Attempted to lock a unlocked array");return this._lockCount--,this},n.prototype.isLocked=function(){return this._lockCount>0},n.prototype.retain=function(){if(!this.isValid())throw new Error("Attempted to release an invalidated array");if(this.isLocked())throw new Error("Attempted to retain a locked array");return this._refCount++,this},n.prototype.release=function(){if(!this.isValid())throw new Error("Attempted to release an invalidated array");if(this.isLocked())throw new Error("Attempted to release a locked array");return 0===--this._refCount&&this._context._invalidate(this),this},n.prototype.tryRelease=function(){if(!this.isValid())throw new Error("Attempted to release an invalidated array");return this.isLocked()||0===--this._refCount&&this._context._invalidate(this),this},n.prototype._tryRelease=function(){return this.isLocked()||0===--this._refCount&&this._context._invalidate(this),this},n.prototype.invalidate=function(){return this.isValid()&&(this._context._invalidate(this),this._isValid=!1,this._refCount=0,this._lockCount=0),this},n.prototype.isValid=function(){return this._isValid},n.prototype._decRef=function(){return 0===this._lockCount&&--this._refCount,0!==this._refCount},n.prototype._incRef=function(){return 0===this._lockCount&&++this._refCount,this},n.prototype._hasRefs=function(){return 0!==this._lockCount||0!==this._refCount},n.prototype._tryInvalidate=function(){return this.isValid()&&!this._hasRefs()?(this._context._invalidate(this),this._isValid=!1,!0):!1},n.prototype.add=function(e){return this._context.add(this,e)},n.prototype.sub=function(e){return this._context.sub(this,e)},n.prototype.mul=function(e){return this._context.mul(this,e)},n.prototype.div=function(e){return this._context.div(this,e)},n.prototype.min=function(e){return this._context.min(this,e)},n.prototype.max=function(e){return this._context.max(this,e)},n.prototype.sum=function(e){return this._context.sum(this,e)},n.prototype.reshape=function(e){return this._context.reshape(this,e)},n.prototype.repeat=function(e,f){return this._context.repeat(this,e,f)},n.prototype.get=function(e){this._context.get(this,e)},f.exports=n},{"./DataType":1,"./util":8}],4:[function(e,f){"use strict";function o(e,f){var n=this;this._pnaclObject=document.createElement("object"),this._pnaclObject.width=0,this._pnaclObject.height=0,this._pnaclObject.data=o.getDefaultManifestURL(),this._pnaclObject.type="application/x-pnacl",this._pnaclObject.addEventListener("load",function(){var e=i.newMessageId();a[e]=function(){f(n)},n._pnaclObject.postMessage({id:e,command:"init"})},!0),this._pnaclObject.addEventListener("message",w,!0),document.body.appendChild(this._pnaclObject)}var n=e("./NDArray"),d=e("./DataType"),i=e("./allocator"),t=e("./util"),u="";try{for(var l=document.getElementsByTagName("script"),p=l.length-1;p>=0;--p){var s=l[p].src;s=s.split("?")[0];var y=s.lastIndexOf("/"),c=s.substring(y+1);if("furious.js"===c||"furious.min.js"===c){u=s.substring(0,y+1);break}}}catch(r){}var a={},w=function(e){var f=e.data,o=f.id;"error"==f.status&&console.log("Error: "+f.description),o in a&&("buffer"in f?a[o](f.buffer):(delete f.status,delete f.id,a[o](f)),delete a[o])};o.isSupported=function(){try{return"undefined"!=typeof navigator.mimeTypes["application/x-pnacl"]}catch(e){}return!1},o.getDefaultManifestURL=function(){return u+"furious.nmf"},o.prototype.empty=function(e,f){if(e=t.checkShape(e),"undefined"==typeof f)f=new d("f64");else if(!(f instanceof d))throw new TypeError(f+" is not an instance of DataType");var o=new n(e,f,this);return o._id=i.newArrayId(),this._pnaclObject.postMessage({id:i.newMessageId(),command:"empty",shape:new Uint32Array(e).buffer,datatype:f.type,out:o._id}),o},o.prototype.zeros=function(e,f){if(e=t.checkShape(e),"undefined"==typeof f)f=new d("f64");else if(!(f instanceof d))throw new TypeError(f+" is not an instance of DataType");var o=new n(e,f,this);return o._id=i.newArrayId(),this._pnaclObject.postMessage({id:i.newMessageId(),command:"zeros",shape:new Uint32Array(e).buffer,datatype:f.type,out:o._id}),o},o.prototype.ones=function(e,f){if(e=t.checkShape(e),"undefined"==typeof f)f=new d("f64");else if(!(f instanceof d))throw new TypeError(f+" is not an instance of DataType");var o=new n(e,f,this);return o._id=i.newArrayId(),this._pnaclObject.postMessage({id:i.newMessageId(),command:"ones",shape:new Uint32Array(e).buffer,datatype:f.type,out:o._id}),o},o.prototype.array=function(e,f){var o=[];if(t.discoverArrayShapeRecursive(e,o,0),"undefined"==typeof f)f=new d("f64");else if(!(f instanceof d))throw new TypeError(f+" is not an instance of DataType");var u=new n(o,f,this);u._id=i.newArrayId();var l=new f.arrayType(u.length);return t.copyArrayDataRecursive(l,e,o,0,0),this._pnaclObject.postMessage({id:i.newMessageId(),command:"array",shape:new Uint32Array(o).buffer,datatype:f.type,buffer:l.buffer,out:u._id}),u},o.prototype.linspace=function(e,f,o,u){if(!t.isReal(e))throw new TypeError(e+" is not a real number");if(!t.isReal(f))throw new TypeError(f+" is not a real number");if("undefined"==typeof o)o=50;else{if(!t.isInt(o))throw new TypeError(o+" is not an integer");if(0>=o)throw new RangeError("The number of samples must be positive")}if("undefined"==typeof u&&(u=!0),u&&1===o)throw new RangeError("The number of samples must be a least 2 (for start and end points)");var l=new d("f64"),p=new n([o],l,this);return p._id=i.newArrayId(),this._pnaclObject.postMessage({id:i.newMessageId(),command:"linspace",start:+e,stop:+f,samples:0|o,closed:!!u,datatype:l.type,out:p._id}),p},o.prototype.reshape=function(e,f){if(t.checkNDArray(e,"a"),f=t.checkShape(f),t.computeLength(f)!==e.length)throw new RangeError("The shape is not compatible with the array");var o=!e._decRef(),d=new n(f,e.dataType,this);return o?(d._id=e._id,o=!1):d._id=i.newArrayId(),this._pnaclObject.postMessage({id:i.newMessageId(),command:"reshape",a:o?-e._id:e._id,out:d._id,shape:new Uint32Array(f).buffer}),d},o.prototype.repeat=function(e,f,o,d){t.checkNDArray(e,"a"),f=t.checkRepeats(f),o=t.checkAxis(o,e.shape.length);var u=e.shape,l=u.slice(0);l[o]*=f,"undefined"==typeof d?(d=new n(l,e.dataType,this),d._id=i.newArrayId()):(t.checkNDArray(d,"out"),t.checkShapesCompatibility(d.shape,l),t.checkDataTypesCompatibility(e.dataType,d.dataType),d._incRef());var p=!e._decRef();return this._pnaclObject.postMessage({id:i.newMessageId(),command:"repeat",a:p?-e._id:e._id,out:d._id,repeats:f,axis:o}),d},o.prototype._invalidate=function(e){0!==e._id&&this._pnaclObject.postMessage({id:i.newMessageId(),command:"free","in":e._id})},o.prototype.get=function(){if(0===arguments.length)throw new Error("Callback argument missing");var e=arguments[arguments.length-1];if(1===arguments.length)throw new Error("At least one NDArray argument expected");for(var f=0;f<arguments.length-1;++f)t.checkNDArray(arguments[f],"argument "+f);for(var o=new Array(arguments.length-1),f=0;f<arguments.length-1;++f)o[f]=!arguments[f]._decRef();for(var n=arguments.length-1,d=new Array(n),f=0;n>f;f++){var u=arguments[f],l=i.newMessageId();a[l]=0===u.shape.length?function(f,o){return function(i){var t=new o(i);d[f]=t[0],0===--n&&e.apply(null,d)}}(f,u.dataType.arrayType):function(f,o,i){return function(u){var l=new Array(i[0]);t.createArrayRecursive(new o(u),l,i,0,0),d[f]=l,0===--n&&e.apply(null,d)}}(f,u.dataType.arrayType,u.shape),this._pnaclObject.postMessage({id:l,command:"get","in":o[f]?-u._id:u._id})}},o.prototype.info=function(e){var f=i.newMessageId();a[f]=e,this._pnaclObject.postMessage({id:f,command:"info"})};var b=function(e,f,o,d,u){var l=null,p=null,s=!1,y=!1;if(e instanceof n){if(l=e.shape,p=e.dataType,f instanceof n)t.checkShapesCompatibility(e.shape,f.shape),t.checkDataTypesCompatibility(e.dataType,f.dataType);else if(!t.isNumber(f))throw new TypeError("Unsupported type of b")}else{if(!t.isNumber(e))throw new TypeError("Unsupported type of a");l=f.shape,p=f.dataType,t.checkNDArray(f,"b")}e instanceof n&&(s=!e._decRef()),f instanceof n&&(y=!f._decRef());try{"undefined"==typeof o?(o=new n(l,p,d),s?(o._id=e._id,s=!1):y?(o._id=f._id,y=!1):o._id=i.newArrayId()):(t.checkNDArray(o,"out"),t.checkShapesCompatibility(l,o.shape),t.checkDataTypesCompatibility(p,o.dataType),o._incRef()),d._pnaclObject.postMessage(e instanceof n?f instanceof n?{id:i.newMessageId(),command:u,a:s?-e._id:e._id,b:y?-f._id:f._id,out:o._id}:{id:i.newMessageId(),command:u+"c",a:s?-e._id:e._id,b:f,out:o._id}:"add"==u||"mul"==u?{id:i.newMessageId(),command:u+"c",a:y?-f._id:f._id,b:e,out:o._id}:{id:i.newMessageId(),command:"r"+u+"c",a:f,b:s?-e._id:e._id,out:o._id})}catch(c){throw e instanceof n&&e._incRef(),f instanceof n&&f._incRef(),c}return o},m=function(e,f,o,d){t.checkNDArray(e,"a");var u=!e._decRef();try{"undefined"==typeof f?(f=new n(e.shape,e.dataType,o),u?(f._id=e._id,u=!1):f._id=i.newArrayId()):(t.checkNDArray(f,"out"),t.checkShapesCompatibility(e.shape,f.shape),t.checkDataTypesCompatibility(e.dataType,f.dataType),f._incRef())}catch(l){throw e._incRef(),l}return o._pnaclObject.postMessage({id:i.newMessageId(),command:d,a:u?-e._id:e._id,out:f._id}),f},g=function(e,f,o,d){t.checkNDArray(e,"a");var u=!e._decRef();try{"undefined"==typeof f?(f=new n([],e.dataType,o),f._id=i.newArrayId()):(t.checkNDArray(f,"out"),t.checkShapesCompatibility(f.shape,[]),t.checkDataTypesCompatibility(e.dataType,f.dataType),f._incRef())}catch(l){throw e._incRef(),l}return o._pnaclObject.postMessage({id:i.newMessageId(),command:d,a:u?-e._id:e._id,out:f._id}),f},x=function(e,f,o,d,u){t.checkNDArray(e,"a");var l=!e._decRef();try{t.checkAxis(f),"undefined"==typeof o?(o=new n(t.computeAxisReductionOutShape(e.shape,f),e.dataType,d),o._id=i.newArrayId()):(t.checkNDArray(o,"out"),t.checkShapesCompatibility(o.shape,[]),t.checkDataTypesCompatibility(e.dataType,o.dataType),o._incRef())}catch(p){throw e._incRef(),p}return d._pnaclObject.postMessage({id:i.newMessageId(),command:u,a:l?-e._id:e._id,axis:0|f,out:o._id}),o},j=function(e,f,o,d){t.checkNDArray(e,"a"),t.checkNDArray(f,"b"),t.checkDataTypesCompatibility(e.dataType,f.dataType);var u=!e._decRef(),l=!f._decRef();try{if("undefined"==typeof o){var p=e.shape,s=f.shape,y=Math.max(p.length-1,0),c=Math.max(s.length-2,0);if(p[y]!=s[c])throw new TypeError("Mismatch in reduction dimensions");for(var r=[],a=0;y>a;a++)r.push(p[a]);if(s.length>1){for(var a=0;c>a;a++)r.push(s[a]);r.push(s[s.length-1])}o=new n(r,e.dataType,d),o._id=i.newArrayId()}else if(o instanceof n)throw t.checkNDArray(o,"out"),t.checkDataTypesCompatibility(e.dataType,o.dataType),new Error("Not implemented")}catch(w){throw e._incRef(),f._incRef(),w}return d._pnaclObject.postMessage({id:i.newMessageId(),command:"dot",a:u?-e._id:e._id,b:l?-f._id:f._id,out:o._id}),o};o.prototype.add=function(e,f,o){return b(e,f,o,this,"add")},o.prototype.sub=function(e,f,o){return b(e,f,o,this,"sub")},o.prototype.mul=function(e,f,o){return b(e,f,o,this,"mul")},o.prototype.div=function(e,f,o){return b(e,f,o,this,"div")},o.prototype.neg=function(e,f){return m(e,f,this,"neg")},o.prototype.abs=function(e,f){return m(e,f,this,"abs")},o.prototype.exp=function(e,f){return m(e,f,this,"exp")},o.prototype.log=function(e,f){return m(e,f,this,"log")},o.prototype.sqrt=function(e,f){return m(e,f,this,"sqrt")},o.prototype.square=function(e,f){return m(e,f,this,"square")},o.prototype.min=function(e,f){if("undefined"==typeof f)return g(e,void 0,this,"min");if(t.isInt(f))return x(e,f,void 0,this,"amin");throw new TypeError("Unsupported axis type")},o.prototype.max=function(e,f){if("undefined"==typeof f)return g(e,void 0,this,"max");if(t.isInt(f))return x(e,f,void 0,this,"amax");throw new TypeError("Unsupported axis type")},o.prototype.sum=function(e,f){if("undefined"==typeof f)return g(e,void 0,this,"sum");if(t.isInt(f))return x(e,f,void 0,this,"asum");throw new TypeError("Unsupported axis type")},o.prototype.dot=function(e,f,o){return j(e,f,o,this)},f.exports=o},{"./DataType":1,"./NDArray":3,"./allocator":5,"./util":8}],5:[function(e,f,o){"use strict";var n=1,d=1;o.newMessageId=function(){var e=n;return n=n+1|0,e},o.newArrayId=function(){var e=d;return d=d+1|0,e}},{}],6:[function(e,f,o){"use strict";var n=e("./DataType"),d=e("./JSContext"),i=e("./PNaClContext"),t=e("./webcl/WebCLContext"),u=function(e,f,o){if("undefined"==typeof o&&("undefined"==typeof f?(o=e,f=void 0,e=void 0):(o=f,f=void 0)),"undefined"==typeof e&&(e=l()),"undefined"==typeof f&&(f={}),"javascript"===e)return new d(f,o);if("pnacl"===e)return new i(f,o);if("webcl"===e)return new t(f,o);throw new Error("Unsupported backend: "+e)},l=function(){return c("webcl")?"webcl":c("pnacl")?"pnacl":"javascript"},p=function(){var e=[];return c("webcl")&&e.push("webcl"),c("pnacl")&&e.push("pnacl"),c("asm.js")&&e.push("asm.js"),e.push("javascript"),e},s=function(e){if("javascript"===e)return{async:[!0,!1]};if("pnacl"===e)return i.isSupported()?{manifest:[i.getDefaultManifestURL()]}:{};if("webcl"===e)return{device:t.getAvailableDevices()};throw new Error("Unsupported backend: "+e)},y=function(e){if("javascript"===e)return{async:!0};if("pnacl"===e)return i.isSupported()?{manifest:i.getDefaultManifestURL()}:{};if("webcl"===e)return{device:t.getDefaultDevice()};throw new Error("Unsupported backend: "+e)},c=function(e){switch(e){case"asm.js":try{for(var f=window.navigator.userAgent,o=f.split(/\s+/),n=/[Ff]irefox\/(\d+)/g,d=0;d<o.length;++d){var u=o[d],l=n.exec(u);if(null!==l){var p=parseInt(l[1]);return p>=29}}return!1}catch(s){}return!1;case"simd.js":return"undefined"!=typeof SIMD&&"undefined"!=typeof Float32x4Array&&"undefined"!=typeof Int32x4Array;case"webgl":try{var y=document.createElement("canvas");try{if(null!==y.getContext("webgl"))return!0}catch(s){}try{if(null!==y.getContext("experimental-webgl"))return!0}catch(s){}}catch(s){}return!1;case"webcl":return t.isSupported();case"pnacl":return i.isSupported();case"nacl":try{return"undefined"!=typeof navigator.mimeTypes["application/x-nacl"]}catch(s){}return!1;default:throw new Error("Unknown feature: "+e)}};o.init=u,o.hasFeature=c,o.getDefaultBackend=l,o.getSupportedBackends=p,o.getBackendOptions=s,o.getDefaultBackendOptions=y,o.DataType=n},{"./DataType":1,"./JSContext":2,"./PNaClContext":4,"./webcl/WebCLContext":9}],7:[function(e,f,o){"use strict";o.fill=function(e,f){for(var o=e.length,n=0;o>n;++n)e[n]=f},o.add=function(e,f,o){for(var n=o.length,d=0;n>d;++d)o[d]=e[d]+f[d]},o.addConst=function(e,f,o){for(var n=o.length,d=0;n>d;++d)o[d]=e[d]+f},o.sub=function(e,f,o){for(var n=o.length,d=0;n>d;++d)o[d]=e[d]-f[d]},o.subConst=function(e,f,o){for(var n=o.length,d=0;n>d;++d)o[d]=e[d]-f},o.subRevConst=function(e,f,o){for(var n=o.length,d=0;n>d;++d)o[d]=f-e[d]},o.mul=function(e,f,o){for(var n=o.length,d=0;n>d;++d)o[d]=e[d]*f[d]},o.mulConst=function(e,f,o){for(var n=o.length,d=0;n>d;++d)o[d]=e[d]*f},o.div=function(e,f,o){for(var n=o.length,d=0;n>d;++d)o[d]=e[d]/f[d]},o.divConst=function(e,f,o){for(var n=o.length,d=0;n>d;++d)o[d]=e[d]/f},o.divRevConst=function(e,f,o){for(var n=o.length,d=0;n>d;++d)o[d]=f/e[d]},o.neg=function(e,f){for(var o=f.length,n=0;o>n;++n)f[n]=-e[n]},o.abs=function(e,f){for(var o=f.length,n=0;o>n;++n)f[n]=Math.abs(e[n])},o.exp=function(e,f){for(var o=f.length,n=0;o>n;++n)f[n]=Math.exp(e[n])},o.log=function(e,f){for(var o=f.length,n=0;o>n;++n)f[n]=Math.log(e[n])},o.sqrt=function(e,f){for(var o=f.length,n=0;o>n;++n)f[n]=Math.sqrt(e[n])},o.square=function(e,f){for(var o=f.length,n=0;o>n;++n){var d=e[n];f[n]=d*d}},o.min=function(e,f){for(var o=e.length,n=e[0],d=1;o>d;++d)n=Math.min(n,e[d]);f[0]=n},o.max=function(e,f){for(var o=e.length,n=e[0],d=1;o>d;++d)n=Math.max(n,e[d]);f[0]=n},o.sum=function(e,f){for(var o=e.length,n=0,d=0;o>d;++d)n+=e[d];f[0]=n},o.axisMin=function(e,f,o,n,d){for(var i=0;o>i;++i)for(var t=0;n>t;++t){for(var u=i*d*n+t,l=e[u],p=1;d>p;++p)u+=n,l=Math.min(l,e[u]);f[i*n+t]=l}},o.axisMax=function(e,f,o,n,d){for(var i=0;o>i;++i)for(var t=0;n>t;++t){for(var u=i*d*n+t,l=e[u],p=1;d>p;++p)u+=n,l=Math.max(l,e[u]);f[i*n+t]=l}},o.axisSum=function(e,f,o,n,d){for(var i=0;o>i;++i)for(var t=0;n>t;++t){for(var u=i*d*n+t,l=e[u],p=1;d>p;++p)u+=n,l+=e[u];f[i*n+t]=l}},o.dot=function(e,f,o,n,d,i,t){for(var u=0;n>u;++u)for(var l=0;t>l;++l)for(var p=0;d>p;++p)for(var s=0;i>s;++s)o[(u*d+p)*i+s]+=e[u*t+l]*f[(p*t+l)*i+s]},o.repeat=function(e,f,o,n,d,i){if(i>n)for(var t=0;o>t;++t)for(var u=0;d>u;++u)for(var l=0;n>l;++l)for(var p=e[(t*d+u)*n+l],s=0;i>s;++s)f[((t*d+u)*i+s)*n+l]=p;else for(var t=0;o>t;++t)for(var u=0;d>u;++u)for(var y=e.subarray((t*d+u)*n,(t*d+u+1)*n),s=0;i>s;++s)f.set(y,((t*d+u)*i+s)*n)}},{}],8:[function(e,f,o){"use strict";var n=function(e){return e===+e};o.isNumber=n;var d=function(e){return e===+e&&isFinite(e)};o.isReal=d;var i=function(e){return e===(0|e)};o.isInt=i,o.isPositiveInt=function(e){return e===+e&&e===(0|e)&&e>0},o.isNonNegativeInt=function(e){return e===+e&&e===(0|e)&&e>=0};var t=function(e){return e instanceof Array};o.isArray=t,o.isIntArray=function(e){if(o.isArray(e)){for(var f=0;f<e.length;f++)if(!o.isInt(e[f]))return!1;return!0}return!1},o.isPositiveIntArray=function(e){if(o.isArray(e)){for(var f=0;f<e.length;f++)if(!o.isPositiveInt(e[f]))return!1;return!0}return!1},o.asIntArray=function(e){if(o.isInt(e))return[e];if(o.isIntArray(e))return e;throw new TypeError(e+" can not be converted to integer array")},o.roundUp=function(e,f){return Math.ceil(e/f)*f};var u=function(e){if(n(e))return u([e]);if(t(e)){for(var f=e.length,o=new Array(f),d=0;f>d;d++){if(!n(e[d]))throw new Error("Shape has non-numeric dimensions");if(!i(e[d]))throw new Error("Shape must have integer dimensions");if(e[d]<1)throw new Error("Degenerate shape");o[d]=0|e[d]}return o}};o.checkShape=u,o.checkShapesCompatibility=function(e,f){if(e.length!=f.length)throw new Error("The shapes have different dimensions");for(var o=e.length,n=0;o>n;n++)if(e[n]!=f[n])throw new Error("The shapes are different")},o.computeLength=function(e){for(var f=1,o=0;o<e.length;++o)f*=e[o];return f},o.checkDataType=function(f){var o=e("./DataType");if(!(f instanceof o))throw new TypeError("dataType is not an instance of DataType");return f},o.checkDataTypesCompatibility=function(e,f){if(!e.equals(f))throw new Error("The data types are not compatible")},o.checkNDArray=function(f,o){var n=e("./NDArray");if(!(f instanceof n))throw new TypeError(o+" is not an NDArray");if(!f.isValid())throw new Error(o+" is an invalidated array")},o.checkDifferentNDArrays=function(e,f,o,n){if(e===f)throw new Error("The arrays "+o+" and "+n+" must be different")},o.checkRepeats=function(e){if(!i(e))throw new TypeError("Repeats is not an integer");if(1>=e)throw new RangeError("Repeats should be greater than 1");return 0|e},o.checkAxis=function(e,f){if(!i(e))throw new TypeError("Axis is not an integer");if(0>e)throw new RangeError("Axis is negative");if(e>=f)throw new RangeError("Axis out of range");return 0|e},o.checkAxisReductionOutShape=function(e,f,o){if(e.length!==f.length+1)throw new Error("Output array has invalid number of dimensions for this operation");for(var n=0;o>n;++n)if(e[n]!==f[n])throw new Error("Output array has invalid shape for this operation");for(var n=o+1;n<e.length;++n)if(e[n]!==f[n-1])throw new Error("Output array has invalid shape for this operation")},o.computeAxisReductionOutShape=function(e,f){for(var o=[],n=0;n<e.length;++n)n!==f&&o.push(e[n]);return o},o.computeOuterStride=function(e,f){for(var o=1,n=0;f>n;++n)o*=e[n];return o},o.computeInnerStride=function(e,f){for(var o=1,n=f+1;n<e.length;++n)o*=e[n];return o};var l=function(e,f,o){if(t(e)){if(f.length<=o)f.push(e.length);else if(f[o]!=e.length)throw new RangeError("Sub-array "+e+" does not match the expected dimension of "+f[o]);for(var d=0;d<e.length;d++)l(e[d],f,o+1)}else{if(o!=f.length)throw new RangeError("Sub-array ["+e+"] does not match the expected dimension of "+f[o]);if(!n(e))throw new TypeError("Non-numeric element: "+e)}};o.discoverArrayShapeRecursive=l;var p=function(e,f,o,n,d){var i=o[n];if(n===o.length-1)e.set(f,d*i);else for(var t=0;i>t;t++)p(e,f[t],o,n+1,d*i+t)};o.copyArrayDataRecursive=p;var s=function(e,f,o,n,d){var i=o[n];if(n===o.length-1)for(var t=0;i>t;t++)f[t]=e[d*i+t];else for(var t=0;i>t;t++)f[t]=new Array(o[n+1]),s(e,f[t],o,n+1,d*i+t)};o.createArrayRecursive=s},{"./DataType":1,"./NDArray":3}],9:[function(e,f){"use strict";function o(e,f){c();var o="kernel void add_f32(\n	uint length,\n	global float* a,\n	global float* b,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] + b[id];\n	}\n}\nkernel void add_f64(\n	uint length,\n	global double* a,\n	global double* b,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] + b[id];\n	}\n}\nkernel void sub_f32(\n	uint length,\n	global float* a,\n	global float* b,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] - b[id];\n	}\n}\nkernel void sub_f64(\n	uint length,\n	global double* a,\n	global double* b,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] - b[id];\n	}\n}\nkernel void mul_f32(\n	uint length,\n	global float* a,\n	global float* b,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] * b[id];\n	}\n}\nkernel void mul_f64(\n	uint length,\n	global double* a,\n	global double* b,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] * b[id];\n	}\n}\nkernel void div_f32(\n	uint length,\n	global float* a,\n	global float* b,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] / b[id];\n	}\n}\nkernel void div_f64(\n	uint length,\n	global double* a,\n	global double* b,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] / b[id];\n	}\n}\nkernel void addc_f32(\n	uint length,\n	global float* a,\n	float b,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] + b;\n	}\n}\nkernel void addc_f64(\n	uint length,\n	global double* a,\n	double b,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] + b;\n	}\n}\nkernel void subc_f32(\n	uint length,\n	global float* a,\n	float b,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] - b;\n	}\n}\nkernel void subc_f64(\n	uint length,\n	global double* a,\n	double b,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] - b;\n	}\n}\nkernel void subrc_f32(\n	uint length,\n	global float* a,\n	float b,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = b / a[id];\n	}\n}\nkernel void subrc_f64(\n	uint length,\n	global double* a,\n	double b,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = b / a[id];\n	}\n}\nkernel void mulc_f32(\n	uint length,\n	global float* a,\n	float b,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] * b;\n	}\n}\nkernel void mulc_f64(\n	uint length,\n	global double* a,\n	double b,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] * b;\n	}\n}\nkernel void divc_f32(\n	uint length,\n	global float* a,\n	float b,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] / b;\n	}\n}\nkernel void divc_f64(\n	uint length,\n	global double* a,\n	double b,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = a[id] / b;\n	}\n}\nkernel void divrc_f32(\n	uint length,\n	global float* a,\n	float b,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = b / a[id];\n	}\n}\nkernel void divrc_f64(\n	uint length,\n	global double* a,\n	double b,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = b / a[id];\n	}\n}\n",n="kernel void neg_f32(\n	uint length,\n	global float* a,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = -a[id];\n	}\n}\nkernel void neg_f64(\n	uint length,\n	global double* a,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = -a[id];\n	}\n}\nkernel void abs_f32(\n	uint length,\n	global float* a,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = fabs(a[id]);\n	}\n}\nkernel void abs_f64(\n	uint length,\n	global double* a,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = fabs(a[id]);\n	}\n}\nkernel void exp_f32(\n	uint length,\n	global float* a,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = exp(a[id]);\n	}\n}\nkernel void exp_f64(\n	uint length,\n	global double* a,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = exp(a[id]);\n	}\n}\nkernel void log_f32(\n	uint length,\n	global float* a,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = log(a[id]);\n	}\n}\nkernel void log_f64(\n	uint length,\n	global double* a,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = log(a[id]);\n	}\n}\nkernel void sqrt_f32(\n	uint length,\n	global float* a,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = sqrt(a[id]);\n	}\n}\nkernel void sqrt_f64(\n	uint length,\n	global double* a,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = sqrt(a[id]);\n	}\n}\nkernel void square_f32(\n	uint length,\n	global float* a,\n	global float* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		const float aVal = a[id]; \n		out[id] = aVal * aVal;\n	}\n}\nkernel void square_f64(\n	uint length,\n	global double* a,\n	global double* out)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		const double aVal = a[id];\n		out[id] = aVal * aVal;\n	}\n}\n",d="kernel void sum_f32_gpu(\n	uint length,\n	global float* a,\n	local float* scratch,\n	global float* out)\n{\n	const uint globalSize = get_global_size(0);\n	uint globalIndex = get_global_id(0);\n	float accumulator = 0.0f;\n	while (globalIndex < length) {\n		accumulator += a[globalIndex];\n		globalIndex += globalSize;\n	}\n\n	uint localIndex = get_local_id(0);\n	scratch[localIndex] = accumulator;\n	barrier(CLK_LOCAL_MEM_FENCE);\n	for (uint offset = get_local_size(0) / 2; offset != 0; offset >>= 1) {\n		if (localIndex < offset) {\n			scratch[localIndex] += scratch[localIndex + offset];\n		}\n		barrier(CLK_LOCAL_MEM_FENCE);\n	}\n	if (localIndex == 0) {\n		out[get_group_id(0)] = scratch[0];\n	}\n}\n\nkernel void sum_f64_gpu(\n	uint length,\n	global double* a,\n	local double* scratch,\n	global double* out)\n{\n	const uint globalSize = get_global_size(0);\n	uint globalIndex = get_global_id(0);\n	double accumulator = 0.0;\n	while (globalIndex < length) {\n		accumulator += a[globalIndex];\n		globalIndex += globalSize;\n	}\n\n	uint localIndex = get_local_id(0);\n	scratch[localIndex] = accumulator;\n	barrier(CLK_LOCAL_MEM_FENCE);\n	for (uint offset = get_local_size(0) / 2; offset != 0; offset >>= 1) {\n		if (localIndex < offset) {\n			scratch[localIndex] += scratch[localIndex + offset];\n		}\n		barrier(CLK_LOCAL_MEM_FENCE);\n	}\n	if (localIndex == 0) {\n		out[get_group_id(0)] = scratch[0];\n	}\n}\n\nkernel void min_f32_gpu(\n	uint length,\n	global float* a,\n	local float* scratch,\n	global float* out)\n{\n	const uint globalSize = get_global_size(0);\n	uint globalIndex = get_global_id(0);\n	float accumulator = INFINITY;\n	while (globalIndex < length) {\n		accumulator = min(accumulator, a[globalIndex]);\n		globalIndex += globalSize;\n	}\n\n	uint localIndex = get_local_id(0);\n	scratch[localIndex] = accumulator;\n	barrier(CLK_LOCAL_MEM_FENCE);\n	for (uint offset = get_local_size(0) / 2; offset != 0; offset >>= 1) {\n		if (localIndex < offset) {\n			scratch[localIndex] = min(scratch[localIndex], scratch[localIndex + offset]);\n		}\n		barrier(CLK_LOCAL_MEM_FENCE);\n	}\n	if (localIndex == 0) {\n		out[get_group_id(0)] = scratch[0];\n	}\n}\n\nkernel void min_f64_gpu(\n	uint length,\n	global double* a,\n	local double* scratch,\n	global double* out)\n{\n	const uint globalSize = get_global_size(0);\n	uint globalIndex = get_global_id(0);\n	double accumulator = INFINITY;\n	while (globalIndex < length) {\n		accumulator = min(accumulator, a[globalIndex]);\n		globalIndex += globalSize;\n	}\n\n	uint localIndex = get_local_id(0);\n	scratch[localIndex] = accumulator;\n	barrier(CLK_LOCAL_MEM_FENCE);\n	for (uint offset = get_local_size(0) / 2; offset != 0; offset >>= 1) {\n		if (localIndex < offset) {\n			scratch[localIndex] = min(scratch[localIndex], scratch[localIndex + offset]);\n		}\n		barrier(CLK_LOCAL_MEM_FENCE);\n	}\n	if (localIndex == 0) {\n		out[get_group_id(0)] = scratch[0];\n	}\n}\n\nkernel void max_f32_gpu(\n	uint length,\n	global float* a,\n	local float* scratch,\n	global float* out)\n{\n	const uint globalSize = get_global_size(0);\n	uint globalIndex = get_global_id(0);\n	float accumulator = -INFINITY;\n	while (globalIndex < length) {\n		accumulator = max(accumulator, a[globalIndex]);\n		globalIndex += globalSize;\n	}\n\n	uint localIndex = get_local_id(0);\n	scratch[localIndex] = accumulator;\n	barrier(CLK_LOCAL_MEM_FENCE);\n	for (uint offset = get_local_size(0) / 2; offset != 0; offset >>= 1) {\n		if (localIndex < offset) {\n			scratch[localIndex] = max(scratch[localIndex], scratch[localIndex + offset]);\n		}\n		barrier(CLK_LOCAL_MEM_FENCE);\n	}\n	if (localIndex == 0) {\n		out[get_group_id(0)] = scratch[0];\n	}\n}\n\nkernel void max_f64_gpu(\n	uint length,\n	global double* a,\n	local double* scratch,\n	global double* out)\n{\n	const uint globalSize = get_global_size(0);\n	uint globalIndex = get_global_id(0);\n	double accumulator = -INFINITY;\n	while (globalIndex < length) {\n		accumulator = max(accumulator, a[globalIndex]);\n		globalIndex += globalSize;\n	}\n\n	uint localIndex = get_local_id(0);\n	scratch[localIndex] = accumulator;\n	barrier(CLK_LOCAL_MEM_FENCE);\n	for (uint offset = get_local_size(0) / 2; offset != 0; offset >>= 1) {\n		if (localIndex < offset) {\n			scratch[localIndex] = max(scratch[localIndex], scratch[localIndex + offset]);\n		}\n		barrier(CLK_LOCAL_MEM_FENCE);\n	}\n	if (localIndex == 0) {\n		out[get_group_id(0)] = scratch[0];\n	}\n}\n",i="kernel void asum_f32(\n	uint reductionDim,\n	global float* a,\n	global float* out)\n{\n	const uint innerStride = get_global_size(1);\n	const uint i = get_global_id(0);\n	const uint k = get_global_id(1);\n	a += i * reductionDim * innerStride + k;\n	float accumulator = *a;\n	while (--reductionDim) {\n		a += innerStride;\n		accumulator += *a;\n	}\n	out[i * innerStride + k] = accumulator;\n}\n\nkernel void asum_f64(\n	uint reductionDim,\n	global double* a,\n	global double* out)\n{\n	const uint innerStride = get_global_size(1);\n	const uint i = get_global_id(0);\n	const uint k = get_global_id(1);\n	a += i * reductionDim * innerStride + k;\n	double accumulator = *a;\n	while (--reductionDim) {\n		a += innerStride;\n		accumulator += *a;\n	}\n	out[i * innerStride + k] = accumulator;\n}\n\nkernel void amin_f32(\n	uint reductionDim,\n	global float* a,\n	global float* out)\n{\n	const uint innerStride = get_global_size(1);\n	const uint i = get_global_id(0);\n	const uint k = get_global_id(1);\n	a += i * reductionDim * innerStride + k;\n	float accumulator = *a;\n	while (--reductionDim) {\n		a += innerStride;\n		accumulator = min(accumulator, *a);\n	}\n	out[i * innerStride + k] = accumulator;\n}\n\nkernel void amin_f64(\n	uint reductionDim,\n	global double* a,\n	global double* out)\n{\n	const uint innerStride = get_global_size(1);\n	const uint i = get_global_id(0);\n	const uint k = get_global_id(1);\n	a += i * reductionDim * innerStride + k;\n	double accumulator = *a;\n	while (--reductionDim) {\n		a += innerStride;\n		accumulator = min(accumulator, *a);\n	}\n	out[i * innerStride + k] = accumulator;\n}\n\nkernel void amax_f32(\n	uint reductionDim,\n	global float* a,\n	global float* out)\n{\n	const uint innerStride = get_global_size(1);\n	const uint i = get_global_id(0);\n	const uint k = get_global_id(1);\n	a += i * reductionDim * innerStride + k;\n	float accumulator = *a;\n	while (--reductionDim) {\n		a += innerStride;\n		accumulator = max(accumulator, *a);\n	}\n	out[i * innerStride + k] = accumulator;\n}\n\nkernel void amax_f64(\n	uint reductionDim,\n	global double* a,\n	global double* out)\n{\n	const uint innerStride = get_global_size(1);\n	const uint i = get_global_id(0);\n	const uint k = get_global_id(1);\n	a += i * reductionDim * innerStride + k;\n	double accumulator = *a;\n	while (--reductionDim) {\n		a += innerStride;\n		accumulator = max(accumulator, *a);\n	}\n	out[i * innerStride + k] = accumulator;\n}\n",t="kernel void dot_f32(\n	uint reductionDim,\n	global float* a,\n	global float* b,\n	global float* out)\n{\n	const uint i = get_global_id(0);\n	const uint k = get_global_id(1);\n	const uint l = get_global_id(2);\n	const uint outerStrideB = get_global_size(1);\n	const uint innerStrideB = get_global_size(2);\n\n	float accumulator = 0.0f;\n	for (uint j = 0; j < reductionDim; ++j) {\n		accumulator += a[i*reductionDim+j] * b[(k*reductionDim+j)*innerStrideB+l];\n	}\n	out[(i*outerStrideB + k) * innerStrideB + l] = accumulator;\n}\n\nkernel void dot_f64(\n	uint reductionDim,\n	global double* a,\n	global double* b,\n	global double* out)\n{\n	const uint i = get_global_id(0);\n	const uint k = get_global_id(1);\n	const uint l = get_global_id(2);\n	const uint outerStrideB = get_global_size(1);\n	const uint innerStrideB = get_global_size(2);\n\n	double accumulator = 0.0;\n	for (uint j = 0; j < reductionDim; ++j) {\n		accumulator += a[i*reductionDim+j] * b[(k*reductionDim+j)*innerStrideB+l];\n	}\n	out[(i*outerStrideB + k) * innerStrideB + l] = accumulator;\n}\n",y="kernel void set_f32(\n	uint length,\n	global float* out,\n	float value)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = value;\n	}\n}\nkernel void set_f64(\n	uint length,\n	global double* out,\n	double value)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = value;\n	}\n}\n\nkernel void linspace_f32(\n	uint length,\n	global float* out,\n	float start,\n	float step)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = start + step * ((float) id);\n	}\n}\nkernel void linspace_f64(\n	uint length,\n	global double* out,\n	double start,\n	double step)\n{\n	const uint id = get_global_id(0);\n	if (id < length) {\n		out[id] = start + step * ((double) id);\n	}\n}\n\nkernel void repeat_f32(\n	uint expansionDim,\n	uint innerStride,\n	uint repeats,\n	global float *restrict a,\n	global float *restrict out)\n{\n	const uint i = get_global_id(0);\n	const uint j = get_global_id(1);\n	const uint k = get_global_id(2);\n	const float value = a[(i * expansionDim + j) * innerStride + k];\n	uint offsetOut = (i * expansionDim + j) * repeats * innerStride + k;\n	for (uint c = 0; c < repeats; ++c) {\n		out[offsetOut] = value;\n		offsetOut += innerStride;\n	}\n}\nkernel void repeat_f64(\n	uint expansionDim,\n	uint innerStride,\n	uint repeats,\n	global double *restrict a,\n	global double *restrict out)\n{\n	const uint i = get_global_id(0);\n	const uint j = get_global_id(1);\n	const uint k = get_global_id(2);\n	const double value = a[(i * expansionDim + j) * innerStride + k];\n	uint offsetOut = (i * expansionDim + j) * repeats * innerStride + k;\n	for (uint c = 0; c < repeats; ++c) {\n		out[offsetOut] = value;\n		offsetOut += innerStride;\n	}\n}\n",r=o+n+d+i+t+y,a=e.asyncCallbacks;
this.asyncCallbacks="undefined"==typeof a?u:!!a;var w=e.device;if(w){var b=s.indexOf(w);if(-1===b)throw new Error("Invalid WebCL device name: "+w);this.device=p[b]}else{var b=x();if(0>b)throw new Error("No suitable WebCL device found");this.device=p[b]}this.device.enableExtension("KHR_fp64"),this.deviceInfo={deviceClass:g(this.device),localMemorySize:this.device.getInfo(l.DEVICE_LOCAL_MEM_SIZE),maxComputeUnits:this.device.getInfo(l.DEVICE_MAX_COMPUTE_UNITS),maxWorkGroupSize:this.device.getInfo(l.DEVICE_MAX_WORK_GROUP_SIZE),maxWorkItemSizes:this.device.getInfo(l.DEVICE_MAX_WORK_ITEM_SIZES)},this.context=l.createContext(this.device),this.queue=this.context.createCommandQueue(this.device),this.program=this.context.createProgram(r);try{this.program.build([this.device])}catch(m){if("INVALID_DEVICE"!==m.name)throw m;this.program.build()}this.kernels=j(this.program),f(this)}var n=e("../NDArray"),d=e("../DataType"),i=e("../util"),t=!1,u=!1,l=void 0,p=null,s=null,y=-1,c=function(){if("undefined"==typeof l)if("object"==typeof window)l="undefined"!=typeof window.webcl?window.webcl:null;else try{l=e("node-webcl"),u=!0}catch(f){l=null}return l},r=function(){return u?new l.WebCLEvent:new WebCLEvent},a=function(e){if(null!==e)try{return e.release(),!0}catch(f){}return!1},w=function(e){var f=e.getSupportedExtensions();if(-1===f.indexOf("KHR_fp64"))return!1;var o="kernel void foo(global double* bar) { }",n=null,d=null;try{return n=l.createContext(e),d=n.createProgram(o),d.build(),!0}catch(i){return!1}finally{a(d),a(n)}},b=function(){if(null===p){p=[];var e=c();if(null!==e)for(var f=l.getPlatforms(),o=0;o<f.length;++o)for(var n=f[o],d=n.getDevices(l.DEVICE_TYPE_ALL),i=0;i<d.length;++i){var t=d[i];w(t)&&p.push(t)}m()}return p},m=function(){s=[];for(var e=!0,f=0;f<p.length;++f){var o=p[f],n=o.getInfo(l.DEVICE_NAME);if(null===n||""===n){e=!1;break}s[f]=n}if(!e){for(var d=0,i=0,t=0,f=0;f<p.length;++f){var o=p[f],u=g(o);if("cpu"===u)++d,s[f]="CPU";else if("igpu"===u)++i,s[f]="iGPU";else{if("dgpu"!==u)throw new Error("Impossible device classification: "+u);++t,s[f]="dGPU"}}if(d>1||i>1||t>1)for(var y=0,c=0,r=0,f=0;f<p.length;++f){var o=p[f],u=g(o);if("cpu"===u)d>1&&(++y,s[f]="CPU #"+y);else if("igpu"===u)i>1&&(++c,s[f]="iGPU #"+c);else{if("dgpu"!==u)throw new Error("Impossible device classification: "+u);t>1&&(++t,s[f]="dGPU #"+r)}}}},g=function(e){try{var f=e.getInfo(l.DEVICE_TYPE);if(f===l.DEVICE_TYPE_CPU)return"cpu";if(f===l.DEVICE_TYPE_GPU){var o=e.getInfo(l.DEVICE_HOST_UNIFIED_MEMORY);return o?"igpu":"dgpu"}}catch(n){}return"unknown"},x=function(){if(-1===y){var e=b();if(0===e.length)return y=-2;for(var f=[],o=0;o<e.length;++o){var n=e[o],d=g(n);if("dgpu"===d)return y=o,o;f.push(d)}for(var o=0;o<e.length;++o)if("igpu"===f[o])return y=o,o;for(var o=0;o<e.length;++o)if("cpu"===f[o])return y=o,o}return y},j=function(e){var f={set:{f32:e.createKernel("set_f32"),f64:e.createKernel("set_f64")},linspace:{f32:e.createKernel("linspace_f32"),f64:e.createKernel("linspace_f64")},repeat:{f32:e.createKernel("repeat_f32"),f64:e.createKernel("repeat_f64")},add:{f32:e.createKernel("add_f32"),f64:e.createKernel("add_f64")},sub:{f32:e.createKernel("sub_f32"),f64:e.createKernel("sub_f64")},mul:{f32:e.createKernel("mul_f32"),f64:e.createKernel("mul_f64")},div:{f32:e.createKernel("div_f32"),f64:e.createKernel("div_f64")},addc:{f32:e.createKernel("addc_f32"),f64:e.createKernel("addc_f64")},subc:{f32:e.createKernel("subc_f32"),f64:e.createKernel("subc_f64")},subrc:{f32:e.createKernel("subrc_f32"),f64:e.createKernel("subrc_f64")},mulc:{f32:e.createKernel("mulc_f32"),f64:e.createKernel("mulc_f64")},divc:{f32:e.createKernel("divc_f32"),f64:e.createKernel("divc_f64")},divrc:{f32:e.createKernel("divrc_f32"),f64:e.createKernel("divrc_f64")},neg:{f32:e.createKernel("neg_f32"),f64:e.createKernel("neg_f64")},abs:{f32:e.createKernel("abs_f32"),f64:e.createKernel("abs_f64")},exp:{f32:e.createKernel("exp_f32"),f64:e.createKernel("exp_f64")},log:{f32:e.createKernel("log_f32"),f64:e.createKernel("log_f64")},sqrt:{f32:e.createKernel("sqrt_f32"),f64:e.createKernel("sqrt_f64")},square:{f32:e.createKernel("square_f32"),f64:e.createKernel("square_f64")},sum:{f32:e.createKernel("sum_f32_gpu"),f64:e.createKernel("sum_f64_gpu")},min:{f32:e.createKernel("min_f32_gpu"),f64:e.createKernel("min_f64_gpu")},max:{f32:e.createKernel("max_f32_gpu"),f64:e.createKernel("max_f64_gpu")},asum:{f32:e.createKernel("asum_f32"),f64:e.createKernel("asum_f64")},amin:{f32:e.createKernel("amin_f32"),f64:e.createKernel("amin_f64")},amax:{f32:e.createKernel("amax_f32"),f64:e.createKernel("amax_f64")},dot:{f32:e.createKernel("dot_f32"),f64:e.createKernel("dot_f64")}};return f};o.getAvailableDevices=function(){return o.isSupported()?s:[]},o.getDefaultDevice=function(){var e=x();return 0>e?null:s[e]},o.isSupported=function(){var e=c();if(null===e)return!1;var f=b();return 0!==f.length},o.prototype.empty=function(e,f){if(e=i.checkShape(e),"undefined"==typeof f)f=new d("f64");else if(!(f instanceof d))throw new TypeError(f+" is not an instance of DataType");var o=new n(e,f,this);return o._buffer=this.context.createBuffer(l.MEM_READ_WRITE,o.length*f.size),o},o.prototype.zeros=function(e,f){if(e=i.checkShape(e),"undefined"==typeof f)f=new d("f64");else if(!(f instanceof d))throw new TypeError(f+" is not an instance of DataType");var o=new n(e,f,this);o._buffer=this.context.createBuffer(l.MEM_READ_WRITE,o.length*f.size);var t=this.kernels.set[f.type];return t.setArg(0,new Uint32Array([o.length])),t.setArg(1,o._buffer),t.setArg(2,new f.arrayType([0])),this.queue.enqueueNDRangeKernel(t,1,null,[o.length],null),o},o.prototype.ones=function(e,f){if(e=i.checkShape(e),"undefined"==typeof f)f=new d("f64");else if(!(f instanceof d))throw new TypeError(f+" is not an instance of DataType");var o=new n(e,f,this);o._buffer=this.context.createBuffer(l.MEM_READ_WRITE,o.length*f.size);var t=this.kernels.set[f.type];return t.setArg(0,new Uint32Array([o.length])),t.setArg(1,o._buffer),t.setArg(2,new f.arrayType([1])),this.queue.enqueueNDRangeKernel(t,1,null,[o.length],null),o},o.prototype.array=function(e,f){f="undefined"==typeof f?new d("f64"):i.checkDataType(f);var o=[];i.discoverArrayShapeRecursive(e,o,0);var u=new n(o,f,this),p=new f.arrayType(u.length);return i.copyArrayDataRecursive(p,e,o,0,0),t?u._buffer=this.context.createBuffer(l.MEM_READ_WRITE,p.byteLength,p):(u._buffer=this.context.createBuffer(l.MEM_READ_WRITE,p.byteLength),this.queue.enqueueWriteBuffer(u._buffer,!1,0,p.byteLength,p)),u},o.prototype.linspace=function(e,f,o,t){if(!i.isReal(e))throw new TypeError(e+" is not a real number");if(!i.isReal(f))throw new TypeError(f+" is not a real number");if("undefined"==typeof o)o=50;else{if(!i.isInt(o))throw new TypeError(o+" is not an integer");if(0>=o)throw new RangeError("The number of samples must be positive")}if("undefined"==typeof t&&(t=!0),t&&1===o)throw new RangeError("The number of samples must be a least 2 (for start and end points)");var u=new d("f64"),p=new n(o,u,this);p._buffer=this.context.createBuffer(l.MEM_READ_WRITE,o*u.size);var s=f-e,y=t?o-1:o,c=s/y,r=this.kernels.linspace[u.type];return r.setArg(0,new Uint32Array([p.length])),r.setArg(1,p._buffer),r.setArg(2,new u.arrayType([e])),r.setArg(3,new u.arrayType([c])),this.queue.enqueueNDRangeKernel(r,1,null,[p.length],null),p},o.prototype._invalidate=function(e){null!==e._buffer&&("undefined"!=typeof e._buffer.release&&e._buffer.release(),e._buffer=null)},o.prototype.get=function(){if(0===arguments.length)throw new Error("Callback argument missing");var e=arguments[arguments.length-1];if(1===arguments.length)throw new Error("At least one NDArray argument expected");for(var f=0;f<arguments.length-1;f++)if(!(arguments[f]instanceof n))throw new TypeError("Argument "+f+" is not an NDArray");var o=arguments.length-1,d=new Array(o);if(this.asyncCallbacks)for(var t=[],f=0;o>f;f++){var u=arguments[f];!function(f,n,p,s){var y=new s(u.length),c=r();t.push(c),f.enqueueReadBuffer(u._buffer,!1,0,y.byteLength,y,null,c),0===p.length?c.setCallback(l.COMPLETE,function(){c.release(),d[n]=y[0],0===--o&&e.apply(null,d)}):c.setCallback(l.COMPLETE,function(){c.release();var f=new Array(p[0]);i.createArrayRecursive(new s(y),f,p,0,0),d[n]=f,0===--o&&e.apply(null,d)})}(this.queue,f,u.shape,u.dataType.arrayType),l.waitForEvents(t)}else{for(var f=0;o>f;f++){var u=arguments[f],p=new u.dataType.arrayType(u.length);if(this.queue.enqueueReadBuffer(u._buffer,!0,0,p.byteLength,p),0===u.shape.length)d[f]=p[0];else{var s=new Array(u.shape[0]);i.createArrayRecursive(new u.dataType.arrayType(p),s,u.shape,0,0),d[f]=s}}e.apply(null,d)}},o.prototype.reshape=function(e,f){if(f=i.checkShape(f),i.computeLength(f)!==e.length)throw new RangeError("The shape is not compatible with the array");var o=new n(f,e.dataType,this);return e._decRef()?(o._buffer=this.context.createBuffer(webcl.MEM_READ_WRITE,o.length*o.dataType.size),this.queue.enqueueCopyBuffer(e._buffer,o._buffer,0,0,o.length*o.dataType.size)):(o._buffer=e._buffer,e._buffer=null),o},o.prototype.repeat=function(e,f,o,d){i.checkNDArray(e,"a"),f=i.checkRepeats(f),o=i.checkAxis(o,e.shape.length);var t=e.shape,u=t.slice(0);u[o]*=f,e._decRef();try{"undefined"==typeof d?(d=new n(u,e.dataType,this),d._buffer=this.context.createBuffer(l.MEM_READ_WRITE,d.length*d.dataType.size)):(i.checkNDArray(d,"out"),i.checkShapesCompatibility(d.shape,u),i.checkDataTypesCompatibility(e.dataType,d.dataType),d._incRef());var p=i.computeOuterStride(t,o),s=t[o],y=i.computeInnerStride(t,o),c=this.kernels.repeat[e.dataType.type];c.setArg(0,new Uint32Array([s])),c.setArg(1,new Uint32Array([y])),c.setArg(2,new Uint32Array([f])),c.setArg(3,e._buffer),c.setArg(4,d._buffer),this.queue.enqueueNDRangeKernel(c,3,null,[p,s,y],null)}catch(r){throw e._incRef(),r}return e._tryInvalidate(),d};var v=function(e,f,o,d,t,u,p){var s=null,y=null,c=null,r=null;if(e instanceof n){if(c=e._buffer,s=e.shape,y=e.dataType,f instanceof n)r=f._buffer,i.checkShapesCompatibility(e.shape,f.shape),i.checkDataTypesCompatibility(e.dataType,f.dataType);else if(!i.isNumber(f))throw new TypeError("Unsupported type of b")}else{if(!i.isNumber(e))throw new TypeError("Unsupported type of a");i.checkNDArray(f,"b"),r=f._buffer,s=f.shape,y=f.dataType}e instanceof n&&e._decRef(),f instanceof n&&f._decRef();try{if("undefined"==typeof o?(o=new n(s,y,d),e instanceof n&&!e._hasRefs()?(o._buffer=e._buffer,e._buffer=null):f instanceof n&&!f._hasRefs()?(o._buffer=f._buffer,f._buffer=null):o._buffer=d.context.createBuffer(l.MEM_READ_WRITE,o.length*o.dataType.size)):(i.checkNDArray(o,"out"),i.checkShapesCompatibility(s,o.shape),i.checkDataTypesCompatibility(y,o.dataType),o._incRef()),e instanceof n)if(f instanceof n){var a=t[y.type];a.setArg(0,new Uint32Array([o.length])),a.setArg(1,c),a.setArg(2,r),a.setArg(3,o._buffer),d.queue.enqueueNDRangeKernel(a,1,null,[o.length],null)}else{var a=u[y.type];a.setArg(0,new Uint32Array([o.length])),a.setArg(1,c),a.setArg(2,new y.arrayType([f])),a.setArg(3,o._buffer),d.queue.enqueueNDRangeKernel(a,1,null,[o.length],null)}else{var a=p[y.type];a.setArg(0,new Uint32Array([o.length])),a.setArg(1,r),a.setArg(2,new y.arrayType([e])),a.setArg(3,o._buffer),d.queue.enqueueNDRangeKernel(a,1,null,[o.length],null)}}catch(w){throw e instanceof n&&e._incRef(),f instanceof n&&f._incRef(),w}return e instanceof n&&e._tryInvalidate(),f instanceof n&&f._tryInvalidate(),o},h=function(e,f,o,d){i.checkNDArray(e,"a"),e._decRef();var t=e._buffer;try{"undefined"==typeof f?(f=new n(e.shape,e.dataType,o),e instanceof n&&!e._hasRefs()?(f._buffer=e._buffer,e._buffer=null):f._buffer=o.context.createBuffer(l.MEM_READ_WRITE,f.length*f.dataType.size)):(i.checkNDArray(f,"out"),i.checkShapesCompatibility(e.shape,f.shape),i.checkDataTypesCompatibility(e.dataType,f.dataType),f._incRef());var u=d[e.dataType.type];u.setArg(0,new Uint32Array([f.length])),u.setArg(1,t),u.setArg(2,f._buffer),o.queue.enqueueNDRangeKernel(u,1,null,[f.length],null)}catch(p){throw e._incRef(),p}return e._tryInvalidate(),f},k=function(e,f,o,d,t,u){if(i.checkNDArray(e,"a"),"undefined"==typeof f){"undefined"==typeof o?(o=new n([],e.dataType,d),o._buffer=d.context.createBuffer(l.MEM_READ_WRITE,e.dataType.size)):(i.checkNDArray(o,"out"),i.checkShapesCompatibility([],o.shape),i.checkDataTypesCompatibility(e.dataType,o.dataType),o._incRef());var p=e.length,s=Math.min(Math.min(d.deviceInfo.maxWorkGroupSize,d.deviceInfo.maxWorkItemSizes[0]),d.deviceInfo.localMemorySize/e.dataType.size),y=16,c=t[e.dataType.type];if(s*y>p)c.setArg(0,new Uint32Array([p])),c.setArg(1,e._buffer),c.setArg(2,new Uint32Array([s*e.dataType.size])),c.setArg(3,o._buffer),d.queue.enqueueNDRangeKernel(c,1,null,[s],[s]);else{var r=d.deviceInfo.maxComputeUnits,a=c.getWorkGroupInfo(d.device,l.KERNEL_PREFERRED_WORK_GROUP_SIZE_MULTIPLE),w=d.context.createBuffer(l.MEM_READ_WRITE,r*e.dataType.size);c.setArg(0,new Uint32Array([p])),c.setArg(1,e._buffer),c.setArg(2,new Uint32Array([s*e.dataType.size])),c.setArg(3,w),d.queue.enqueueNDRangeKernel(c,1,null,[s*r],[s]);var b=Math.min(s,i.roundUp(r,a));c.setArg(0,new Uint32Array([r])),c.setArg(1,w),c.setArg(2,new Uint32Array([b*e.dataType.size])),c.setArg(3,o._buffer),d.queue.enqueueNDRangeKernel(c,1,null,[b],[b]),w.release()}return e._tryRelease(),o}f=i.checkAxis(f,e.shape.length);var m=i.computeAxisReductionOutShape(e.shape,f);if("undefined"==typeof o){var o=new n(m,e.dataType,d);o._buffer=d.context.createBuffer(l.MEM_READ_WRITE,e.dataType.size*o.length)}else i.checkNDArray(o,"out"),i.checkShapesCompatibility([],o.shape),i.checkDataTypesCompatibility(e.dataType,o.dataType),o._incRef();var g=i.computeOuterStride(e.shape,f),x=e.shape[f],j=i.computeInnerStride(e.shape,f),c=u[e.dataType.type];return c.setArg(0,new Uint32Array([x])),c.setArg(1,e._buffer),c.setArg(2,o._buffer),d.queue.enqueueNDRangeKernel(c,2,null,[g,j],null),e._tryRelease(),o};o.prototype.add=function(e,f,o){return v(e,f,o,this,this.kernels.add,this.kernels.addc,this.kernels.addc)},o.prototype.sub=function(e,f,o){return v(e,f,o,this,this.kernels.sub,this.kernels.subc,this.kernels.subrc)},o.prototype.mul=function(e,f,o){return v(e,f,o,this,this.kernels.mul,this.kernels.mulc,this.kernels.mulc)},o.prototype.div=function(e,f,o){return v(e,f,o,this,this.kernels.div,this.kernels.divc,this.kernels.divrc)},o.prototype.neg=function(e,f){return h(e,f,this,this.kernels.neg)},o.prototype.abs=function(e,f){return h(e,f,this,this.kernels.abs)},o.prototype.exp=function(e,f){return h(e,f,this,this.kernels.exp)},o.prototype.log=function(e,f){return h(e,f,this,this.kernels.log)},o.prototype.sqrt=function(e,f){return h(e,f,this,this.kernels.sqrt)},o.prototype.square=function(e,f){return h(e,f,this,this.kernels.square)},o.prototype.min=function(e,f,o){return k(e,f,o,this,this.kernels.min,this.kernels.amin)},o.prototype.max=function(e,f,o){return k(e,f,o,this,this.kernels.max,this.kernels.amax)},o.prototype.sum=function(e,f,o){return k(e,f,o,this,this.kernels.sum,this.kernels.asum)},o.prototype.dot=function(e,f,o){i.checkNDArray(e,"a"),i.checkNDArray(f,"b"),i.checkDataTypesCompatibility(e.dataType,f.dataType);var d=Math.max(e.shape.length-1,0),t=Math.max(f.shape.length-2,0),u=e.shape[d];if(u!==f.shape[t])throw new RangeError("Arrays have incompatible reduction dimensions");for(var l=[],p=1,s=1,y=1,c=0;d>c;c++)l.push(e.shape[c]),p*=e.shape[c];for(var c=0;c<f.shape.length;c++){var r=f.shape[c];t>c?(s*=r,l.push(r)):c>t&&(y*=r,l.push(r))}"undefined"==typeof o?o=this.empty(l,e.dataType):o instanceof n&&(i.checkNDArray(o,"out"),i.checkShapesCompatibility(o.shape,l),i.checkDataTypesCompatibility(o.dataType,e.dataType),i.checkDifferentNDArrays(e,o,"a","out"),i.checkDifferentNDArrays(f,o,"b","out"),o._incRef());var a=this.kernels.dot[o.dataType.type];return a.setArg(0,new Uint32Array([u])),a.setArg(1,e._buffer),a.setArg(2,f._buffer),a.setArg(3,o._buffer),this.queue.enqueueNDRangeKernel(a,3,null,[p,s,y],null),e._tryRelease(),f._tryRelease(),o},f.exports=o},{"../DataType":1,"../NDArray":3,"../util":8}]},{},[6])(6)});